// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Robust_Stepwise
std::vector<arma::uword> Robust_Stepwise(arma::mat& x, arma::vec& y, arma::mat& correlation_predictors, arma::vec& correlation_response, arma::uword& model_saturation, double& sig_level, arma::uword& model_size);
RcppExport SEXP _robStepSplitReg_Robust_Stepwise(SEXP xSEXP, SEXP ySEXP, SEXP correlation_predictorsSEXP, SEXP correlation_responseSEXP, SEXP model_saturationSEXP, SEXP sig_levelSEXP, SEXP model_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type correlation_predictors(correlation_predictorsSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type correlation_response(correlation_responseSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type model_saturation(model_saturationSEXP);
    Rcpp::traits::input_parameter< double& >::type sig_level(sig_levelSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type model_size(model_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(Robust_Stepwise(x, y, correlation_predictors, correlation_response, model_saturation, sig_level, model_size));
    return rcpp_result_gen;
END_RCPP
}
// Robust_Stepwise_Split
Rcpp::List Robust_Stepwise_Split(arma::mat& x, arma::vec& y, arma::mat& correlation_predictors, arma::vec& correlation_response, arma::uword& model_saturation, double& sig_level, arma::uword& model_size, arma::uword& n_models);
RcppExport SEXP _robStepSplitReg_Robust_Stepwise_Split(SEXP xSEXP, SEXP ySEXP, SEXP correlation_predictorsSEXP, SEXP correlation_responseSEXP, SEXP model_saturationSEXP, SEXP sig_levelSEXP, SEXP model_sizeSEXP, SEXP n_modelsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type correlation_predictors(correlation_predictorsSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type correlation_response(correlation_responseSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type model_saturation(model_saturationSEXP);
    Rcpp::traits::input_parameter< double& >::type sig_level(sig_levelSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type model_size(model_sizeSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_models(n_modelsSEXP);
    rcpp_result_gen = Rcpp::wrap(Robust_Stepwise_Split(x, y, correlation_predictors, correlation_response, model_saturation, sig_level, model_size, n_models));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_robStepSplitReg_Robust_Stepwise", (DL_FUNC) &_robStepSplitReg_Robust_Stepwise, 7},
    {"_robStepSplitReg_Robust_Stepwise_Split", (DL_FUNC) &_robStepSplitReg_Robust_Stepwise_Split, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_robStepSplitReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
